{"version":3,"sources":["webpack:///./src/utils/utilityFunctions.js","webpack:///./src/pages/tags.js"],"names":["module","exports","slugify","text","toString","toLowerCase","replace","TagsPage","render","data","this","props","siteTitle","site","siteMetadata","title","tags","group","location","className","map","tag","totalCount","key","md","sm","to","React","Component"],"mappings":"4EAaAA,EAAOC,QAAU,CAAEC,QAbH,SAASC,GACrB,OAAOA,EACJC,WACAC,cACAC,QAAQ,OAAQ,KAChBA,QAAQ,WAAY,IACpBA,QAAQ,OAAQ,KAChBA,QAAQ,MAAO,IACfA,QAAQ,MAAO,O,sJCDhBC,E,kGACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAOP,EAAKO,KAAKC,MAEvB,OACE,kBAAC,IAAD,CAAQC,SAAUR,KAAKC,MAAMO,SAAUH,MAAOH,GAC5C,kBAAC,IAAD,CAAKG,MAAM,+BAEX,yBAAKI,UAAU,aAEb,kBAAC,IAAD,KAECH,EAAKI,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,WACd,OACE,kBAAC,IAAD,CAAKC,IAAKF,EAAIA,IAAKG,GAAG,IAAIC,GAAG,KAC3B,yBAAKN,UAAU,cACb,kBAAC,OAAD,CAAMO,GAAE,SAAWxB,kBAAQmB,GAAQF,UAAU,+BAC1CE,EADH,IACQ,+BAAQC,EAAR,UAA2BA,EAAa,EAAb,kB,GAnBhCK,IAAMC,WAkCdrB","file":"component---src-pages-tags-js-1ebd697509fba46c0dbc.js","sourcesContent":["const slugify = function(text) {\n    return text\n      .toString()\n      .toLowerCase()\n      .replace(/\\s+/g, '-')       // Replace spaces with -\n      .replace(/[^\\w-]+/g, '')    // Remove all non-word chars\n      .replace(/--+/g, '-')       // Replace multiple - with single -\n      .replace(/^-+/, '')         // Trim - from start of text\n      .replace(/-+$/, '')         // Trim - from end of text\n  }\n\n\n\nmodule.exports = { slugify }","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Row, Col } from 'reactstrap'\nimport { slugify } from '../utils/utilityFunctions'\n\nclass TagsPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const tags = data.tags.group\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"View the Nosredna Cookbook\" />\n\n        <div className=\"container\">\n\n          <Row>\n\n          {tags.map(({ tag, totalCount }) => {\n              return (\n                <Col key={tag.tag} md=\"4\" sm=\"6\">\n                  <div className=\"tag-holder\">\n                    <Link to={`/tags/${slugify(tag)}`} className=\"portfolio-item tag-item p-3\">\n                      {tag} <small>{totalCount} recipe{totalCount > 1 ? `s` : ``}</small>\n                    </Link>\n                  </div>\n                </Col>\n              )\n            })}\n\n          </Row>\n\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default TagsPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            prep\n            cook\n            full_img{\n              childImageSharp{\n                fluid(maxWidth:500, quality:80){\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    tags: allMarkdownRemark(limit: 2000){\n      group(field: frontmatter___tags) {\n        tag: fieldValue\n        totalCount\n      }\n    }\n  }\n`\n"],"sourceRoot":""}